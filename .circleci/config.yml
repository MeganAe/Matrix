version: 2
jobs:
  sytestpy2:
    machine: true
    steps:
      - checkout
      - run: docker pull matrixdotorg/sytest-synapsepy2
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs matrixdotorg/sytest-synapsepy2
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy2postgres:
    machine: true
    steps:
      - checkout
      - run: docker pull matrixdotorg/sytest-synapsepy2
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs -e POSTGRES=1 matrixdotorg/sytest-synapsepy2
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy2merged:
    machine: true
    steps:
      - checkout
      - |
        if [[ -n "${CIRCLE_PR_NUMBER}" ]]
        then
            # Update PR refs for testing.
            FETCH_REFS="+${CIRCLE_PR_BASE_BRANCH}:${CIRCLE_PR_BASE_BRANCH}"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/head:pr/${CIRCLE_PR_NUMBER}/head"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"

            # Retrieve the refs
            git fetch -u origin ${FETCH_REFS}

            # Checkout PR merge ref.
            git checkout -qf "pr/${CIRCLE_PR_NUMBER}/merge"

            # Test for merge conflicts.
            git branch --merged | grep ${CIRCLE_PR_BASE_BRANCH} > /dev/null
            git branch --merged | grep "pr/${CIRCLE_PR_NUMBER}/head" > /dev/null
        fi
      - run: docker pull matrixdotorg/sytest-synapsepy2
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs matrixdotorg/sytest-synapsepy2
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy2postgresmerged:
    machine: true
    steps:
      - checkout
      - |
        if [[ -n "${CIRCLE_PR_NUMBER}" ]]
        then
            # Update PR refs for testing.
            FETCH_REFS="+${CIRCLE_PR_BASE_BRANCH}:${CIRCLE_PR_BASE_BRANCH}"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/head:pr/${CIRCLE_PR_NUMBER}/head"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"

            # Retrieve the refs
            git fetch -u origin ${FETCH_REFS}

            # Checkout PR merge ref.
            git checkout -qf "pr/${CIRCLE_PR_NUMBER}/merge"

            # Test for merge conflicts.
            git branch --merged | grep ${CIRCLE_PR_BASE_BRANCH} > /dev/null
            git branch --merged | grep "pr/${CIRCLE_PR_NUMBER}/head" > /dev/null
        fi
      - run: docker pull matrixdotorg/sytest-synapsepy2
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs -e POSTGRES=1 matrixdotorg/sytest-synapsepy2
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy3:
    machine: true
    steps:
      - checkout
      - run: docker pull matrixdotorg/sytest-synapsepy3
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs hawkowl/sytestpy3
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy3postgres:
    machine: true
    steps:
      - checkout
      - run: docker pull matrixdotorg/sytest-synapsepy3
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs -e POSTGRES=1 matrixdotorg/sytest-synapsepy3
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy3merged:
    machine: true
    steps:
      - checkout
      - |
        if [[ -n "${CIRCLE_PR_NUMBER}" ]]
        then
            # Update PR refs for testing.
            FETCH_REFS="+${CIRCLE_PR_BASE_BRANCH}:${CIRCLE_PR_BASE_BRANCH}"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/head:pr/${CIRCLE_PR_NUMBER}/head"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"

            # Retrieve the refs
            git fetch -u origin ${FETCH_REFS}

            # Checkout PR merge ref.
            git checkout -qf "pr/${CIRCLE_PR_NUMBER}/merge"

            # Test for merge conflicts.
            git branch --merged | grep ${CIRCLE_PR_BASE_BRANCH} > /dev/null
            git branch --merged | grep "pr/${CIRCLE_PR_NUMBER}/head" > /dev/null
        fi
      - run: docker pull matrixdotorg/sytest-synapsepy3
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs hawkowl/sytestpy3
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs
  sytestpy3postgresmerged:
    machine: true
    steps:
      - checkout
      - |
        if [[ -n "${CIRCLE_PR_NUMBER}" ]]
        then
            # Update PR refs for testing.
            FETCH_REFS="+${CIRCLE_PR_BASE_BRANCH}:${CIRCLE_PR_BASE_BRANCH}"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/head:pr/${CIRCLE_PR_NUMBER}/head"
            FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"

            # Retrieve the refs
            git fetch -u origin ${FETCH_REFS}

            # Checkout PR merge ref.
            git checkout -qf "pr/${CIRCLE_PR_NUMBER}/merge"

            # Test for merge conflicts.
            git branch --merged | grep ${CIRCLE_PR_BASE_BRANCH} > /dev/null
            git branch --merged | grep "pr/${CIRCLE_PR_NUMBER}/head" > /dev/null
        fi
      - run: docker pull matrixdotorg/sytest-synapsepy3
      - run: docker run --rm -it -v $(pwd)\:/src -v $(pwd)/logs\:/logs -e POSTGRES=1 matrixdotorg/sytest-synapsepy3
      - store_artifacts:
          path: ~/project/logs
          destination: logs
      - store_test_results:
          path: logs

workflows:
  version: 2
  build:
    jobs:
      - sytestpy2
      - sytestpy2postgres
      - sytestpy2merged
      - sytestpy2postgresmerged
# Currently broken while the Python 3 port is incomplete
#      - sytestpy3
#      - sytestpy3postgres
