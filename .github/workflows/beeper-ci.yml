name: Beep

on:
  push:
    branches: ["beeper"]
  pull_request:


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install poetry
      - run: poetry install --extras all
      - run: poetry run isort --check synapse
      - run: poetry run black --check synapse
      - run: poetry run mypy

  # Tests

  test-trial:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install poetry
      - run: poetry install --extras all
      - run: poetry run trial -j4 tests

  test-sytest:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: matrixdotorg/sytest-synapse:buster
      volumes:
        - ${{ github.workspace }}:/src
      env:
        SYTEST_BRANCH: ${{ github.head_ref }}
        TOP: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v2
      - name: Run SyTest
        run: /bootstrap.sh synapse
        working-directory: /src
      - name: Summarise results.tap
        if: ${{ always() }}
        run: /sytest/scripts/tap_to_gha.pl /logs/results.tap
      - name: Upload SyTest logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Sytest Logs - ${{ job.status }} - (${{ join(matrix.*, ', ') }})
          path: |
            /logs/results.tap
            /logs/**/*.log*

  # Builds

  build-python:
    needs:
      - test-trial
      - test-sytest
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
      - run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }} ${{ secrets.CI_REGISTRY }}
      - run: |-
          if [ "${{ github.ref_name }}" = "beeper" ]; then
            tag=$(cat pyproject.toml | grep -E "^version =" | sed -E 's/^version = "(.+)"$/\1/');
          else
            tag="${{ github.ref_name }}";
          fi

          docker build --tag ${{ secrets.CI_REGISTRY }}/synapse:$tag-${{ github.sha }} -f docker/Dockerfile .
          docker push ${{ secrets.CI_REGISTRY }}/synapse:$tag-${{ github.sha }}

          if [ "${{ github.ref_name }}" = "beeper" ]; then
            docker tag \
              ${{ secrets.CI_REGISTRY }}/synapse:$tag-${{ github.sha }} \
              ${{ secrets.CI_REGISTRY }}/synapse:latest
            docker push ${{ secrets.CI_REGISTRY }}/synapse:latest
          fi

  build-pyston:
    needs:
      - test-trial
      - test-sytest
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
      - run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }} ${{ secrets.CI_REGISTRY }}
      - run: |-
          if [ "${{ github.ref_name }}" = "beeper" ]; then
            tag=$(cat pyproject.toml | grep -E "^version =" | sed -E 's/^version = "(.+)"$/\1/');
          else
            tag="${{ github.ref_name }}";
          fi

          docker build \
            --build-arg BASE_IMAGE=pyston/slim:2.3.3 \
            --tag ${{ secrets.CI_REGISTRY }}/synapse:$tag-${{ github.sha }}-pyston \
            -f docker/Dockerfile-custom-base .

          docker push ${{ secrets.CI_REGISTRY }}/synapse:$tag-${{ github.sha }}-pyston
