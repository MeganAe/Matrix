env:
  COVERALLS_REPO_TOKEN: wsJWOby6j0uCYFiCes3r0XauxO27mx8lD

steps:
  - command:
      - "python -m pip install tox"
      - "tox -e check_codestyle"
    label: "\U0001F9F9 Check Style"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          mount-buildkite-agent: false

  - command:
      - "python -m pip install tox"
      - "tox -e packaging"
    label: "\U0001F9F9 packaging"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          mount-buildkite-agent: false

  - command:
      - "python -m pip install tox"
      - "tox -e check_isort"
    label: "\U0001F9F9 isort"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          mount-buildkite-agent: false

  - command:
      - "python -m pip install tox"
      - "scripts-dev/check-newsfragment"
    label: ":newspaper: Newsfile"
    branches: "!master !develop !release-*"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          propagate-environment: true
          mount-buildkite-agent: false

  - command:
      - "python -m pip install tox"
      - "tox -e check-sampleconfig"
    label: "\U0001F9F9 check-sample-config"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          mount-buildkite-agent: false

  - command:
      - "python -m pip install tox"
      - "tox -e mypy"
    label: ":mypy: mypy"
    plugins:
      - docker#v3.0.1:
          image: "python:3.5"
          mount-buildkite-agent: false

  - wait

  - command:
      - "apt-get update && apt-get install -y python3.5 python3.5-dev python3-pip libxml2-dev libxslt-dev zlib1g-dev"
      - "python3.5 -m pip install tox"
      - "tox -e py35-old,combine"
    label: ":python: 3.5 / SQLite / Old Deps"
    env:
      TRIAL_FLAGS: "-j 2"
      LANG: "C.UTF-8"
    plugins:
      - docker#v3.0.1:
          image: "ubuntu:xenial"  # We use xenial to get an old sqlite and python
          workdir: "/src"
          mount-buildkite-agent: false
          propagate-environment: true
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - command:
      - "python -m pip install tox"
      - "tox -e py35,combine"
    label: ":python: 3.5 / SQLite"
    env:
      TRIAL_FLAGS: "-j 2"
    plugins:
      - docker#v3.0.1:
          image: "python:3.5"
          workdir: "/src"
          mount-buildkite-agent: false
          propagate-environment: true
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - command:
      - "python -m pip install tox"
      - "tox -e py36,combine"
    label: ":python: 3.6 / SQLite"
    env:
      TRIAL_FLAGS: "-j 2"
    plugins:
      - docker#v3.0.1:
          image: "python:3.6"
          workdir: "/src"
          mount-buildkite-agent: false
          propagate-environment: true
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - command:
      - "python -m pip install tox"
      - "tox -e py37,combine"
    label: ":python: 3.7 / SQLite"
    env:
      TRIAL_FLAGS: "-j 2"
    plugins:
      - docker#v3.0.1:
          image: "python:3.7"
          workdir: "/src"
          mount-buildkite-agent: false
          propagate-environment: true
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: ":python: 3.5 / :postgres: 9.5"
    agents:
      queue: "medium"
    env:
      TRIAL_FLAGS: "-j 8"
    command:
      - "bash -c 'python -m pip install tox && python -m tox -e py35-postgres,combine'"
    plugins:
      - docker-compose#v2.1.0:
          run: testenv
          config:
            - .buildkite/docker-compose.py35.pg95.yaml
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: ":python: 3.7 / :postgres: 9.5"
    agents:
      queue: "medium"
    env:
      TRIAL_FLAGS: "-j 8"
    command:
      - "bash -c 'python -m pip install tox && python -m tox -e py37-postgres,combine'"
    plugins:
      - docker-compose#v2.1.0:
          run: testenv
          config:
            - .buildkite/docker-compose.py37.pg95.yaml
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: ":python: 3.7 / :postgres: 11"
    agents:
      queue: "medium"
    env:
      TRIAL_FLAGS: "-j 8"
    command:
      - "bash -c 'python -m pip install tox && python -m tox -e py37-postgres,combine'"
    plugins:
      - docker-compose#v2.1.0:
          run: testenv
          config:
            - .buildkite/docker-compose.py37.pg11.yaml
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: "SyTest - :python: 3.5 / SQLite / Monolith"
    agents:
      queue: "medium"
    command:
      - "bash .buildkite/merge_base_branch.sh"
      - "bash /synapse_sytest.sh"
    plugins:
      - docker#v3.0.1:
          image: "matrixdotorg/sytest-synapse:py35"
          propagate-environment: true
          always-pull: true
          workdir: "/src"
          entrypoint: ["/bin/sh", "-e", "-c"]
          mount-buildkite-agent: false
          volumes: ["./logs:/logs"]
      - artifacts#v1.2.0:
          upload: [ "logs/**/*.log", "logs/**/*.log.*", "logs/coverage.xml" ]
      - matrix-org/annotate:
          path: "logs/annotate.md"
          class: "error"
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: "SyTest - :python: 3.5 / :postgres: 9.6 / Monolith"
    agents:
      queue: "medium"
    env:
      POSTGRES: "1"
    command:
      - "bash .buildkite/merge_base_branch.sh"
      - "bash /synapse_sytest.sh"
    plugins:
      - docker#v3.0.1:
          image: "matrixdotorg/sytest-synapse:py35"
          propagate-environment: true
          always-pull: true
          workdir: "/src"
          entrypoint: ["/bin/sh", "-e", "-c"]
          mount-buildkite-agent: false
          volumes: ["./logs:/logs"]
      - artifacts#v1.2.0:
          upload: [ "logs/**/*.log", "logs/**/*.log.*", "logs/coverage.xml" ]
      - matrix-org/annotate:
          path: "logs/annotate.md"
          class: "error"
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - label: "SyTest - :python: 3.5 / :postgres: 9.6 / Workers"
    agents:
      queue: "medium"
    env:
      POSTGRES: "1"
      WORKERS: "1"
      BLACKLIST: "synapse-blacklist-with-workers"
    command:
      - "bash .buildkite/merge_base_branch.sh"
      - "bash -c 'cat /src/sytest-blacklist /src/.buildkite/worker-blacklist > /src/synapse-blacklist-with-workers'"
      - "bash /synapse_sytest.sh"
    plugins:
      - docker#v3.0.1:
          image: "matrixdotorg/sytest-synapse:py35"
          propagate-environment: true
          always-pull: true
          workdir: "/src"
          entrypoint: ["/bin/sh", "-e", "-c"]
          mount-buildkite-agent: false
          volumes: ["./logs:/logs"]
      - artifacts#v1.2.0:
          upload: [ "logs/**/*.log", "logs/**/*.log.*", "logs/coverage.xml" ]
      - matrix-org/annotate:
          path: "logs/annotate.md"
          class: "error"
      - matrix-org/coveralls#v1.0:
          parallel: "true"
    retry:
      automatic:
        - exit_status: -1
          limit: 2
        - exit_status: 2
          limit: 2

  - wait: ~
    continue_on_failure: true

  - label: Trigger webhook
    command: "curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d \"payload[build_num]=$BUILDKITE_BUILD_NUMBER&payload[status]=done\""
