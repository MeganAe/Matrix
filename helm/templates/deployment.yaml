---
apiVersion: apps/v1 
kind: Deployment
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
  labels:
    app: {{ .Values.serviceName }}
    version: "{{ .Values.imageTag }}"
  name: {{ .Values.serviceName }}
spec:
  replicas: {{ .Values.numOfPods | default 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
      labels:
        app: {{ .Values.serviceName }}
        version: "{{ .Values.imageTag }}"
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      {{- if (.Values.acrSecretName) }} 
      imagePullSecrets:
        - name: {{ .Values.acrSecretName }}
      {{- end }}
#      affinity:
#        nodeAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 1
#            preference:
#              matchExpressions:
#              - key: computeResources
#                operator: In
#                values:
#                - High
      initContainers:
      - env:
        - name: AZURE_TENANT_ID
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureTenantId
        - name: AZURE_CLIENT_ID
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureClientId
        - name: AZURE_CLIENT_SECRET
          valueFrom:
           secretKeyRef:
            name: {{ .Values.serviceName }}-secrets
            key: azureClientSecret
        name: init
        image: alpine
        command: 
          - sh
          - "-c"
          - "echo Updating /var/lib/synapse/config/homeserver.yaml file;
            [ -e /var/lib/synapse/config/homeserver-with-placeholders.yaml ] || cp /var/lib/synapse/config/homeserver.yaml /var/lib/synapse/config/homeserver-with-placeholders.yaml;
            /bin/cp -f /var/lib/synapse/config/homeserver-with-placeholders.yaml /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<MatrixServerName>/{{ .Values.matrixServerName }}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<publicBaseHostNameAndPort>/{{ .Values.externalDnsEntry | default (print (.Values.dnsEntry | default (print .Values.serviceName "." .Release.Namespace) ) ":" .Values.basePort) }}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<tenant id>/${AZURE_TENANT_ID}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<client id>/${AZURE_CLIENT_ID}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<client secret>/${AZURE_CLIENT_SECRET}/\" /var/lib/synapse/config/homeserver.yaml;
            sed -i \"s/<AllowPasswordLogin>/{{ .Values.allowPasswordLogin | default "false" }}/\" /var/lib/synapse/config/homeserver.yaml;
            echo START of /var/lib/synapse/config/homeserver.yaml file content;
            echo ' ';
            cat /var/lib/synapse/config/homeserver.yaml;
            echo ' ';
            echo END of /var/lib/synapse/config/homeserver.yaml file content;"
        volumeMounts:
        - name: config
          mountPath: /var/lib/synapse/config
      containers:
      - env:
        - name: SYNAPSE_CONFIG_DIR
          value: /var/lib/synapse/config
        - name: SYNAPSE_DATA_DIR
          value: /var/lib/synapse/data
        {{- if (.Values.dnsEntry) }} 
        - name: DNS_ENTRY
          value: {{ .Values.dnsEntry }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_DNS_ENTRY
          value: {{ .Values.dnsEntry }}
        {{- end }}
        {{- if (.Values.externalDnsEntry) }} 
        - name: EXTERNAL_DNS_ENTRY
          value: {{ .Values.externalDnsEntry }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_EXTERNAL_DNS_ENTRY
          value: {{ .Values.externalDnsEntry }}
        {{- end }}
        - name: KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: {{ upper .Values.serviceName | replace "-" "_" }}_{{ upper .Release.Namespace | replace "-" "_" }}_KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: HELM_RELEASE_TIME
          value: "{{ date "20060102-150405" .Release.Time }}"
        - name: MY_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: JVM_MAX_HEAP_SIZE
          value: "{{ .Values.jvmMaxHeapSizeMB }}m"
        # Set the minimum memory that will be available on the node to assign to the container to be the jvmMaxHeapSizeMB plus 128 MB 
        # for the native heap and operation system processes associated with running Java
        # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#motivation-for-memory-requests-and-limits
        # and https://www.alibabacloud.com/blog/kubernetes-demystified-restrictions-on-java-application-resources_594108
        resources:
          requests:
            memory: "{{ (add 128 .Values.jvmMaxHeapSizeMB) | default 2048 }}Mi"
        image: matrixdotorg/synapse:{{ .Values.imageTag }}            
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
        livenessProbe:
          httpGet:
            path: /
            port: 8448
            scheme: HTTPS
          initialDelaySeconds: 30
        name: synapse
        ports:
        - containerPort: 8448
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8448
            scheme: HTTPS
          initialDelaySeconds: 10
        securityContext:
          privileged: false
        volumeMounts:
        - name: data
          mountPath: /var/lib/synapse/data
        - name: config
          mountPath: /var/lib/synapse/config
        - name: certificates
          mountPath: /var/lib/synapse/certificates
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      volumes:
      - name: data
        hostPath: 
          path: {{ .Values.hostPath }}/tmp-data
      - name: config
        hostPath: 
          path: {{ .Values.hostPath }}
      - name: certificates
        hostPath:
          path: {{ .Values.hostPathCerts }}